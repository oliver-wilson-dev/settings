{
    "workbench.colorTheme": "CodeSandbox",
    "workbench.iconTheme": "material-icon-theme",
    "explorer.confirmDelete": false,
    "window.zoomLevel": 2,
    "git.autofetch": true,
    "files.autoSave": "off",
    "editor.minimap.enabled": false,
    "workbench.editor.enablePreview": false,
    "git.confirmSync": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "git.allowForcePush": true,
    "jasmineExplorer.config": "jest.config.js",
    "jest.showCoverageOnLoad": true,
    "editor.accessibilitySupport": "off",
    "sync.gist": "5313b25084dbe8ed1d1171812a953fc7",
    "coverage-gutters.showGutterCoverage": false,
    "coverage-gutters.showLineCoverage": true,
    "explorer.confirmDragAndDrop": false,
    "git.confirmForcePush": false,
    "npm.enableScriptExplorer": true,
    "editor.fontFamily": "Dank Mono",
    "editor.tokenColorCustomizations": {
        "textMateRules": [
          {
            "scope": [
              // TODO: missing keywords: package, eval
              // all comment types
              "comment",
              // true, false, null
              "constant.language",
              // import, from, export, default, return, if, for, break, continue, try, catch, finally,
              // throw, default, yield, await
              "keyword.control",
              // TODO: remove operator symbols
              // in, void, delete, instanceof
              "keyword.operator",
              // debugger
              "keyword.other",
              // new
              "keyword.operator.new",
              // enum
              "storage.type.enum",
              // super, this, arguments
              "variable.language",
              // attributes in html, jsx, etc.
              "entity.other.attribute-name",
              // TODO: remove storage.type after finding explicit for constructor, const, let, var
              "storage.type",
              // static, extends, async, private, public, implements
              "storage.modifier",
              // TODO: exclude fat arrow
              // function
              "storage.type.function",
              // class
              "storage.type.class",
              // interface
              "storage.type.interface"
            ],
            "settings": {
              "fontStyle": "italic"
            }
          }
        ]
      },
      "cSpell.language": "en,en-GB",
      "cSpell.userWords": [
        "applitools",
        "asos",
        "dataversion",
        "key",
        "nightwatch",
        "repo",
        "saucelabs",
        "sdk",
        "sicarius",
        "sortby",
        "store"
      ],
      "stylelint.enable": true,
      "prettier.stylelintIntegration": true,
      "[json]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
      },
      "[javascript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
      },
      "eslint.alwaysShowStatus": true
}
